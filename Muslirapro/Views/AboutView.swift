//
//  AboutView.swift
//  Muslirapro
//
//  Created by –ê–ª—å–±–µ—Ä—Ç –ì–∏–ª–æ—è–Ω on 22.09.2025.
//

import SwiftUI

struct AboutView: View {
    @State private var showingContact = false
    
    var body: some View {
        NavigationView {
            ZStack {
                // –ù–µ–æ–Ω–æ–≤—ã–π –≥—Ä–∞–¥–∏–µ–Ω—Ç–Ω—ã–π —Ñ–æ–Ω
                LinearGradient(
                    gradient: Gradient(colors: [
                        Color.black,
                        Color.red.opacity(0.1),
                        Color.orange.opacity(0.05)
                    ]),
                    startPoint: .topLeading,
                    endPoint: .bottomTrailing
                )
                .ignoresSafeArea()
                
                ScrollView {
                    VStack(spacing: 30) {
                        // –≠–ª–∏—Ç–Ω—ã–π —Ö–µ–¥–µ—Ä "–û –Ω–∞—Å"
                        VStack(spacing: 20) {
                            ZStack {
                                Circle()
                                    .fill(
                                        LinearGradient(
                                            gradient: Gradient(colors: [.red.opacity(0.2), .orange.opacity(0.1)]),
                                            startPoint: .topLeading,
                                            endPoint: .bottomTrailing
                                        )
                                    )
                                    .frame(width: 120, height: 120)
                                
                                Text("üéµ")
                                    .font(.system(size: 50))
                            }
                            
                            VStack(spacing: 16) {
                                Text("–ú—É–∑ –õ–∏—Ä–∞")
                                    .font(.title)
                                    .fontWeight(.black)
                                    .foregroundStyle(
                                        LinearGradient(
                                            gradient: Gradient(colors: [.red, .orange]),
                                            startPoint: .leading,
                                            endPoint: .trailing
                                        )
                                    )
                                
                                Text("–ú—É–∑—ã–∫–∞–ª—å–Ω–∞—è –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –Ω–æ–≤–æ–≥–æ –ø–æ–∫–æ–ª–µ–Ω–∏—è")
                                    .font(.headline)
                                    .foregroundColor(.white.opacity(0.9))
                                    .multilineTextAlignment(.center)
                            }
                        }
                        .padding(.horizontal, 24)
                        .padding(.vertical, 32)
                        .background(
                            ZStack {
                                RoundedRectangle(cornerRadius: 24)
                                    .fill(
                                        LinearGradient(
                                            gradient: Gradient(colors: [
                                                Color.red.opacity(0.9),
                                                Color.orange.opacity(0.8),
                                                Color.yellow.opacity(0.7)
                                            ]),
                                            startPoint: .topLeading,
                                            endPoint: .bottomTrailing
                                        )
                                    )
                                
                                RoundedRectangle(cornerRadius: 24)
                                    .fill(
                                        LinearGradient(
                                            gradient: Gradient(colors: [
                                                Color.white.opacity(0.2),
                                                Color.clear,
                                                Color.white.opacity(0.1)
                                            ]),
                                            startPoint: .topLeading,
                                            endPoint: .bottomTrailing
                                        )
                                    )
                            }
                        )
                        .shadow(color: .red.opacity(0.3), radius: 20, x: 0, y: 10)
                        .padding(.horizontal)
                        
                        // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ
                        VStack(alignment: .leading, spacing: 20) {
                            Text("–û –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ")
                                .font(.title2)
                                .fontWeight(.black)
                                .foregroundColor(.white)
                            
                            VStack(spacing: 16) {
                                AboutFeatureCard(
                                    icon: "play.circle.fill",
                                    title: "–ü—Ä—è–º–æ–π —ç—Ñ–∏—Ä",
                                    description: "–°–º–æ—Ç—Ä–∏—Ç–µ –∂–∏–≤—ã–µ —Ç—Ä–∞–Ω—Å–ª—è—Ü–∏–∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏",
                                    gradient: [.red, .orange]
                                )
                                
                                AboutFeatureCard(
                                    icon: "video.fill",
                                    title: "–í–∏–¥–µ–æ–∞—Ä—Ö–∏–≤",
                                    description: "–î–æ—Å—Ç—É–ø –∫ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–º –≤—ã—Å—Ç—É–ø–ª–µ–Ω–∏—è–º –∏ –∑–∞–ø–∏—Å—è–º",
                                    gradient: [.orange, .yellow]
                                )
                                
                                AboutFeatureCard(
                                    icon: "dollarsign.circle.fill",
                                    title: "–í–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –≤–∞–ª—é—Ç–∞",
                                    description: "–ó–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π—Ç–µ –∏ —Ç—Ä–∞—Ç—å—Ç–µ –∫–æ–ø–µ–µ—á–∫–∏ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ",
                                    gradient: [.yellow, .red]
                                )
                                
                                AboutFeatureCard(
                                    icon: "person.2.fill",
                                    title: "–†–µ—Ñ–µ—Ä–∞–ª—å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞",
                                    description: "–ü—Ä–∏–≥–ª–∞—à–∞–π—Ç–µ –¥—Ä—É–∑–µ–π –∏ –ø–æ–ª—É—á–∞–π—Ç–µ –±–æ–Ω—É—Å—ã",
                                    gradient: [.red, .pink]
                                )
                            }
                        }
                        .padding(.horizontal)
                        
                        // –ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
                        VStack(alignment: .leading, spacing: 20) {
                            Text("–ö–æ–Ω—Ç–∞–∫—Ç—ã")
                                .font(.title2)
                                .fontWeight(.black)
                                .foregroundColor(.white)
                            
                            VStack(spacing: 16) {
                                ContactCard(
                                    icon: "envelope.fill",
                                    title: "Email",
                                    value: "info@muslira.com",
                                    gradient: [.red, .orange]
                                )
                                
                                ContactCard(
                                    icon: "phone.fill",
                                    title: "–¢–µ–ª–µ—Ñ–æ–Ω",
                                    value: "+7 (999) 123-45-67",
                                    gradient: [.orange, .yellow]
                                )
                                
                                ContactCard(
                                    icon: "location.fill",
                                    title: "–ê–¥—Ä–µ—Å",
                                    value: "–ú–æ—Å–∫–≤–∞, —É–ª. –ú—É–∑—ã–∫–∞–ª—å–Ω–∞—è, 1",
                                    gradient: [.yellow, .red]
                                )
                            }
                        }
                        .padding(.horizontal)
                        
                        // –ö–Ω–æ–ø–∫–∞ –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
                        Button(action: {
                            showingContact = true
                        }) {
                            HStack(spacing: 12) {
                                Image(systemName: "message.fill")
                                    .font(.title3)
                                
                                Text("–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏")
                                    .font(.headline)
                                    .fontWeight(.bold)
                            }
                            .foregroundColor(.white)
                            .frame(maxWidth: .infinity)
                            .padding(.vertical, 16)
                            .background(
                                ZStack {
                                    RoundedRectangle(cornerRadius: 16)
                                        .fill(
                                            LinearGradient(
                                                gradient: Gradient(colors: [.red, .orange]),
                                                startPoint: .leading,
                                                endPoint: .trailing
                                            )
                                        )
                                    
                                    RoundedRectangle(cornerRadius: 16)
                                        .fill(
                                            LinearGradient(
                                                gradient: Gradient(colors: [
                                                    Color.white.opacity(0.2),
                                                    Color.clear
                                                ]),
                                                startPoint: .topLeading,
                                                endPoint: .bottomTrailing
                                            )
                                        )
                                }
                            )
                            .shadow(color: .red.opacity(0.3), radius: 10, x: 0, y: 5)
                        }
                        .padding(.horizontal)
                    }
                    .padding(.vertical)
                }
            }
            .navigationTitle("–û –Ω–∞—Å")
            .navigationBarTitleDisplayMode(.large)
        }
        .sheet(isPresented: $showingContact) {
            ContactView()
        }
    }
}

struct AboutFeatureCard: View {
    let icon: String
    let title: String
    let description: String
    let gradient: [Color]
    
    var body: some View {
        HStack(spacing: 16) {
            ZStack {
                Circle()
                    .fill(
                        LinearGradient(
                            gradient: Gradient(colors: gradient),
                            startPoint: .topLeading,
                            endPoint: .bottomTrailing
                        )
                    )
                    .frame(width: 50, height: 50)
                    .shadow(color: gradient.first?.opacity(0.3) ?? .clear, radius: 8, x: 0, y: 4)
                
                Image(systemName: icon)
                    .font(.title2)
                    .foregroundColor(.white)
            }
            
            VStack(alignment: .leading, spacing: 4) {
                Text(title)
                    .font(.headline)
                    .fontWeight(.bold)
                    .foregroundColor(.white)
                
                Text(description)
                    .font(.subheadline)
                    .foregroundColor(.white.opacity(0.8))
                    .lineLimit(2)
            }
            
            Spacer()
        }
        .padding()
        .background(
            RoundedRectangle(cornerRadius: 16)
                .fill(
                    LinearGradient(
                        gradient: Gradient(colors: [
                            gradient.first?.opacity(0.2) ?? .red,
                            gradient.last?.opacity(0.1) ?? .orange
                        ]),
                        startPoint: .topLeading,
                        endPoint: .bottomTrailing
                    )
                )
                .overlay(
                    RoundedRectangle(cornerRadius: 16)
                        .stroke(
                            LinearGradient(
                                gradient: Gradient(colors: gradient),
                                startPoint: .topLeading,
                                endPoint: .bottomTrailing
                            ),
                            lineWidth: 1
                        )
                )
        )
    }
}

struct ContactCard: View {
    let icon: String
    let title: String
    let value: String
    let gradient: [Color]
    
    var body: some View {
        HStack(spacing: 16) {
            ZStack {
                Circle()
                    .fill(
                        LinearGradient(
                            gradient: Gradient(colors: gradient),
                            startPoint: .topLeading,
                            endPoint: .bottomTrailing
                        )
                    )
                    .frame(width: 40, height: 40)
                    .shadow(color: gradient.first?.opacity(0.3) ?? .clear, radius: 6, x: 0, y: 3)
                
                Image(systemName: icon)
                    .font(.title3)
                    .foregroundColor(.white)
            }
            
            VStack(alignment: .leading, spacing: 2) {
                Text(title)
                    .font(.caption)
                    .fontWeight(.medium)
                    .foregroundColor(.white.opacity(0.7))
                
                Text(value)
                    .font(.subheadline)
                    .fontWeight(.semibold)
                    .foregroundColor(.white)
            }
            
            Spacer()
        }
        .padding()
        .background(
            RoundedRectangle(cornerRadius: 12)
                .fill(
                    LinearGradient(
                        gradient: Gradient(colors: [
                            gradient.first?.opacity(0.15) ?? .red,
                            gradient.last?.opacity(0.1) ?? .orange
                        ]),
                        startPoint: .topLeading,
                        endPoint: .bottomTrailing
                    )
                )
                .overlay(
                    RoundedRectangle(cornerRadius: 12)
                        .stroke(
                            LinearGradient(
                                gradient: Gradient(colors: gradient),
                                startPoint: .topLeading,
                                endPoint: .bottomTrailing
                            ),
                            lineWidth: 1
                        )
                )
        )
    }
}

struct ContactView: View {
    @Environment(\.dismiss) private var dismiss
    @State private var name = ""
    @State private var email = ""
    @State private var message = ""
    @State private var showingSuccess = false
    
    var body: some View {
        NavigationView {
            VStack(spacing: 20) {
                Text("–°–≤—è–∑–∞—Ç—å—Å—è —Å –Ω–∞–º–∏")
                    .font(.title)
                    .fontWeight(.bold)
                    .foregroundColor(.white)
                
                VStack(spacing: 16) {
                    TextField("–í–∞—à–µ –∏–º—è", text: $name)
                        .textFieldStyle(RoundedBorderTextFieldStyle())
                    
                    TextField("Email", text: $email)
                        .textFieldStyle(RoundedBorderTextFieldStyle())
                        .keyboardType(.emailAddress)
                    
                    TextField("–°–æ–æ–±—â–µ–Ω–∏–µ", text: $message, axis: .vertical)
                        .textFieldStyle(RoundedBorderTextFieldStyle())
                        .lineLimit(5...10)
                }
                
                Button(action: {
                    showingSuccess = true
                }) {
                    Text("–û—Ç–ø—Ä–∞–≤–∏—Ç—å")
                        .font(.headline)
                        .foregroundColor(.white)
                        .frame(maxWidth: .infinity)
                        .padding()
                        .background(
                            RoundedRectangle(cornerRadius: 12)
                                .fill(Color.red)
                        )
                }
                
                Spacer()
            }
            .padding()
            .navigationTitle("–û–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å")
            .navigationBarTitleDisplayMode(.inline)
            .toolbar {
                ToolbarItem(placement: .navigationBarTrailing) {
                    Button("–ó–∞–∫—Ä—ã—Ç—å") {
                        dismiss()
                    }
                }
            }
        }
        .alert("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!", isPresented: $showingSuccess) {
            Button("OK") {
                dismiss()
            }
        } message: {
            Text("–ú—ã —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è")
        }
    }
}

#Preview {
    AboutView()
}
