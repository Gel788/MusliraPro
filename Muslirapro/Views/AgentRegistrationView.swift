//
//  AgentRegistrationView.swift
//  Muslirapro
//
//  Created by –ê–ª—å–±–µ—Ä—Ç –ì–∏–ª–æ—è–Ω on 22.09.2025.
//

import SwiftUI

struct AgentRegistrationView: View {
    @Environment(\.dismiss) private var dismiss
    @State private var firstName = ""
    @State private var lastName = ""
    @State private var phone = ""
    @State private var email = ""
    @State private var country = ""
    @State private var password = ""
    @State private var confirmPassword = ""
    @State private var showAlert = false
    @State private var alertMessage = ""
    
    var body: some View {
        ZStack {
            // –§–æ–Ω
            LinearGradient(
                gradient: Gradient(colors: [
                    Color.black,
                    Color(red: 0.05, green: 0.05, blue: 0.1)
                ]),
                startPoint: .top,
                endPoint: .bottom
            )
            .ignoresSafeArea()
            
            ScrollView {
                VStack(spacing: 25) {
                    // –ó–∞–≥–æ–ª–æ–≤–æ–∫
                    VStack(spacing: 12) {
                        Text("üíº")
                            .font(.system(size: 60))
                        
                        Text("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∞–≥–µ–Ω—Ç–∞")
                            .font(.title)
                            .fontWeight(.bold)
                            .foregroundColor(.white)
                        
                        Text("–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –∞–∫–∫–∞—É–Ω—Ç–∞")
                            .font(.subheadline)
                            .foregroundColor(.white.opacity(0.7))
                            .multilineTextAlignment(.center)
                    }
                    .padding(.top, 20)
                    
                    // –§–æ—Ä–º–∞
                    VStack(spacing: 20) {
                        CustomTextField(icon: "person", placeholder: "–ò–º—è", text: $firstName)
                        CustomTextField(icon: "person.fill", placeholder: "–§–∞–º–∏–ª–∏—è", text: $lastName)
                        CustomTextField(icon: "phone", placeholder: "–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞", text: $phone, keyboardType: .phonePad)
                        CustomTextField(icon: "envelope", placeholder: "Email", text: $email, keyboardType: .emailAddress)
                        CustomTextField(icon: "globe", placeholder: "–°—Ç—Ä–∞–Ω–∞", text: $country)
                        
                        CustomSecureField(icon: "lock", placeholder: "–ü–∞—Ä–æ–ª—å", text: $password)
                        CustomSecureField(icon: "lock.fill", placeholder: "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å", text: $confirmPassword)
                        
                        // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–ª–µ–¥—É—é—â–∏—Ö —à–∞–≥–∞—Ö
                        VStack(alignment: .leading, spacing: 10) {
                            HStack(spacing: 8) {
                                Image(systemName: "info.circle.fill")
                                    .foregroundColor(.purple)
                                Text("–ü–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ:")
                                    .font(.caption)
                                    .foregroundColor(.white.opacity(0.8))
                            }
                            
                            VStack(alignment: .leading, spacing: 6) {
                                HStack(spacing: 8) {
                                    Text("‚Ä¢")
                                    Text("–ó–∞–≥—Ä—É–∑–∏—Ç–µ –ª–æ–≥–æ—Ç–∏–ø –∫–æ–º–ø–∞–Ω–∏–∏")
                                }
                                HStack(spacing: 8) {
                                    Text("‚Ä¢")
                                    Text("–£–∫–∞–∂–∏—Ç–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∏—Ä–º—ã")
                                }
                            }
                            .font(.caption)
                            .foregroundColor(.white.opacity(0.6))
                        }
                        .padding()
                        .background(
                            RoundedRectangle(cornerRadius: 12)
                                .fill(Color.purple.opacity(0.1))
                        )
                        
                        // –ö–Ω–æ–ø–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
                        Button(action: registerAgent) {
                            Text("–ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è")
                                .font(.headline)
                                .fontWeight(.bold)
                                .foregroundColor(.white)
                                .frame(maxWidth: .infinity)
                                .padding()
                                .background(
                                    LinearGradient(
                                        gradient: Gradient(colors: [Color.purple, Color.pink]),
                                        startPoint: .leading,
                                        endPoint: .trailing
                                    )
                                )
                                .cornerRadius(12)
                        }
                        .padding(.top, 10)
                    }
                    .padding(.horizontal, 24)
                }
                .padding(.bottom, 40)
            }
        }
        .navigationTitle("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
        .navigationBarTitleDisplayMode(.inline)
        .alert("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è", isPresented: $showAlert) {
            Button("OK", role: .cancel) { }
        } message: {
            Text(alertMessage)
        }
    }
    
    private func registerAgent() {
        // –í–∞–ª–∏–¥–∞—Ü–∏—è
        guard !firstName.isEmpty, !lastName.isEmpty, !phone.isEmpty, !email.isEmpty, !country.isEmpty else {
            alertMessage = "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è"
            showAlert = true
            return
        }
        
        guard password == confirmPassword else {
            alertMessage = "–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç"
            showAlert = true
            return
        }
        
        guard password.count >= 6 else {
            alertMessage = "–ü–∞—Ä–æ–ª—å –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –º–∏–Ω–∏–º—É–º 6 —Å–∏–º–≤–æ–ª–æ–≤"
            showAlert = true
            return
        }
        
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
        alertMessage = "–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ–º–ø–∞–Ω–∏–∏ –≤ –ª–∏—á–Ω–æ–º –∫–∞–±–∏–Ω–µ—Ç–µ."
        showAlert = true
    }
}

#Preview {
    NavigationView {
        AgentRegistrationView()
    }
}

